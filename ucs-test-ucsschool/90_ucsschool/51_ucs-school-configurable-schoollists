#!/usr/share/ucs-test/runner python
## desc: Test umc calls to generate school class lists with altered attributes.
## roles: [domaincontroller_master, domaincontroller_slave]
## tags: [apptest,ucsschool_base1]
## exposure: dangerous
## packages: [ucs-school-umc-groups]

import random
from univention.admin.uexceptions import valueInvalidSyntax
from univention.testing.umc import Client
import univention.testing.ucsschool.ucs_test_school as utu
import univention.testing.utils as utils
import univention.testing.strings as uts
from univention.lib.umc import HTTPError
from ucsschool.lib.models import Student
import univention.config_registry


def random_properties(udm_user, n=5):
	# i take n random properties, which are already set.
	udm_properties = []
	while len(udm_properties) < n:
		key = random.choice(udm_user.keys())
		if udm_user[key]:
			udm_properties.append(key)
	return udm_properties


def main():

	with utu.UCSTestSchool() as schoolenv:
		host = schoolenv.ucr.get('hostname')
		ucrv_name = 'ucsschool/umc/lists/class/attributes'
		school_name, oudn = schoolenv.create_ou()
		class_name, class_dn = schoolenv.create_school_class(school_name)
		student_firstname = uts.random_string()
		student_lastname = uts.random_string()
		student_mailaddress = "{}@{}".format(student_firstname,host)
		student, student_dn = schoolenv.create_user(
			school_name,
			classes=class_name,
			firstname=student_firstname,
			lastname=student_lastname,
			mailaddress=student_mailaddress,
		)
		klass_name = class_name.split('-', 1)[1]
		udm_user = Student.from_dn(student_dn, school_name, schoolenv.lo).get_udm_object(schoolenv.lo)
		udm_properties = random_properties(udm_user)

		# default_udm_properties = ['firstname', 'lastname', 'username']
		# udm_properties = default_udm_properties

		expected_values = []
		for key in udm_properties:
			value = udm_user.get(key)
			if type(value) is list:
				value = " ".join(udm_user.get(key))
			expected_values.append(value)

		udm_properties.append('Class')
		expected_values.append(klass_name)
		column_names = [value.upper() for value in udm_properties]
		ucr_value = ",".join([" ".join(pair) for pair in zip(udm_properties, column_names)])
		print('Set {}={}'.format(ucrv_name, ucr_value))
		univention.config_registry.handler_set(['{}={}'.format(ucrv_name, ucr_value)])
		schoolenv.ucr.load()

		account = utils.UCSTestDomainAdminCredentials()
		connection = Client(host, language='en_US')
		connection.authenticate(account.username, account.bindpw)
		expected_error = "'displayNames' is not a valid UDM-property. Please change the value of UCR ucsschool/umc/lists/class/attributes."
		expected_class_list = {
			u'csv': u'{fieldnames_string}\r\n{expected_values}\r\n'.format(
				fieldnames_string=",".join(column_names),
				expected_values=",".join(expected_values)
			),
			u'filename': u'{}.csv'.format(class_name),
		}
		options = {'school': school_name, 'group': class_dn, 'separator': ','}
		try:
			class_list = connection.umc_command('schoollists/csvlist', options).result
		except HTTPError as exc:
			assert exc.message == expected_error
		print('Expected: {}'.format(expected_class_list))
		print('Received: {}'.format(class_list))
		assert class_list == expected_class_list


if __name__ == '__main__':
	main()
