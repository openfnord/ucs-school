include:
  - project: 'univention/documentation/sphinx-docker'
    file: 'pipeline/sphinx.yml'

stages:
  - build
  - merge
  - production

.sphinx-doc:
  stage: build
  image: $SPHINX_BASE
  variables:
    DOC_TARGET_VERSION: "5.0"
    CHANGELOG_TARGET_VERSION: "5.0v5"
  artifacts:
    paths:
      - $DOCS_DIR/_build
      - $CI_PROJECT_DIR/out
    reports:
      codequality: $DOCS_DIR/codeclimate.json

.sphinx-html:
  extends:
    - .sphinx-html-template
    - .sphinx-doc
  script:
    - mkdir -p "$CI_PROJECT_DIR"/out/$DOC_NAME/"$DOC_TARGET_VERSION"/"$language"
    - make -C "$DOCS_DIR" -e FORCE_COLOR="TRUE" -e SPHINXOPTS="-v -D language='$language'" -e BUILDDIR="_build/$language" html
    - rsync -av --delete "$DOCS_DIR"/_build/"$language"/html/ "$CI_PROJECT_DIR"/out/"$DOC_NAME"/"$DOC_TARGET_VERSION"/"$language"

.sphinx-pdf:
  extends:
    - .sphinx-doc
    - .sphinx-pdf-template
  script:
    - mkdir -p "$CI_PROJECT_DIR"/out/"$DOC_NAME"/"$DOC_TARGET_VERSION"/"$language"
    - make -C "$DOCS_DIR" -e FORCE_COLOR="TRUE" -e SPHINXOPTS="-v -D language='$language'" -e BUILDDIR="_build/$language" latexpdf
    - cp "$DOCS_DIR"/_build/"$language"/latex/"$DOC_NAME".pdf "$CI_PROJECT_DIR"/out/"$DOC_NAME"/"$DOC_TARGET_VERSION"/"$language"/"$DOC_NAME".pdf

.sphinx-linkcheck:
  extends:
    - .sphinx-doc
    - .sphinx-linkcheck-template
  script:
    - make -C $DOCS_DIR -e FORCE_COLOR="TRUE" -e SPHINXOPTS="-v -D language='$language'" -e BUILDDIR="_build/$language" linkcheck

.sphinx-spelling:
  extends:
    - .sphinx-doc
    - .sphinx-spelling-template
  script:
    - make -C "$DOCS_DIR" -e FORCE_COLOR="TRUE" -e SPHINXOPTS="-W --keep-going -D language='$language'" -e BUILDDIR="_build/$language" spelling

.sphinx-warnings:
  extends: .sphinx-warnings-template
  script:
    - make -C "$DOCS_DIR" -e FORCE_COLOR="TRUE" -e SPHINXOPTS="-v -W --keep-going -D language='$language'" -e BUILDDIR="_build/$language" html

# The child pipeline needs at minimum one job to run - otherwise the sub-pipeline fails
webframe:
  stage: build
  image: docker-registry.knut.univention.de/docbook
  script:
    - cp -rTu /DocBook/webframe public
  artifacts:
    paths:
      - public
